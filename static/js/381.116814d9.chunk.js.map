{"version":3,"file":"static/js/381.116814d9.chunk.js","mappings":"oLACA,EAA4B,0B,SCEb,SAASA,IACtB,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CAAcC,MAAM,UAGzB,C,6ICRD,EAA+B,8BAA/B,EAA4E,8BAA5E,EAAgI,qCAAhI,EAAmL,6BAAnL,EAAoO,mCAApO,EAA2R,mCAA3R,EAAuV,wCAAvV,EAA+Y,+B,SCOhY,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAfAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACbI,MACE,sCACEH,EACA,2EAEDI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJV,EAAWU,EAAIC,QAChB,IACAC,OAAM,kBAAMC,EAAAA,GAAAA,MAAY,gCAAlB,IACNC,SAAQ,kBAAMZ,GAAa,EAAnB,GACZ,GAAE,CAACC,KAGF,gCACGJ,EAAQgB,OAAS,GAChB,eAAIrB,UAAWC,EAAf,SACGI,EAAQiB,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC7BC,EAAa,IAAIC,KAAKF,GAAYG,iBACxC,OACE,gBAAa7B,UAAWC,EAAxB,WACE,gBAAID,UAAWC,EAAf,WACE,SAAC,MAAD,CAAa6B,KAAM,WACnB,iBAAM9B,UAAWC,EAAjB,SAAmCuB,QAErC,cAAGxB,UAAWC,EAAd,SAAsCwB,KACtC,eAAGzB,UAAWC,EAAd,WACE,SAAC,MAAD,CAAe6B,KAAM,WACrB,iBAAM9B,UAAWC,EAAjB,SACG0B,SATEJ,EAcZ,OAGH,cAAGvB,UAAWC,EAAd,wBAEDM,IAAa,SAACR,EAAA,EAAD,KACd,SAAC,KAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/MovieDetails/Reviews/Reviews.module.css?48d1","pages/MovieDetails/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Loader_container__X02md\"};","import { InfinitySpin } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport default function Loader() {\n  return (\n    <div className={css.container}>\n      <InfinitySpin color=\"blue\" />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"reviews_list\":\"Reviews_reviews_list__SXa9I\",\"reviews_item\":\"Reviews_reviews_item__LP+Bg\",\"reviews_item_author\":\"Reviews_reviews_item_author__KNWW0\",\"author_name\":\"Reviews_author_name__tpEb7\",\"reviews_item_text\":\"Reviews_reviews_item_text__0wVmf\",\"reviews_item_date\":\"Reviews_reviews_item_date__ZifIU\",\"reviews_item_date_text\":\"Reviews_reviews_item_date_text__H+reC\",\"error_message\":\"Reviews_error_message__R5tqr\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { BsVectorPen } from 'react-icons/bs';\nimport { TfiAlarmClock } from 'react-icons/tfi';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Loader from 'components/Loader/Loader';\nimport css from './Reviews.module.css';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\n      'https://api.themoviedb.org/3/movie/' +\n        movieId +\n        '/reviews?api_key=3fffdfe7cecd1a69958de862b7a37291&language=en-US&page=1'\n    )\n      .then(response => response.json())\n      .then(res => {\n        setReviews(res.results);\n      })\n      .catch(() => toast.error('Oops, something went wrong...'))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul className={css.reviews_list}>\n          {reviews.map(({ id, author, content, created_at }) => {\n            const reviewDate = new Date(created_at).toLocaleString();\n            return (\n              <li key={id} className={css.reviews_item}>\n                <h2 className={css.reviews_item_author}>\n                  <BsVectorPen size={'0.8em'} />\n                  <span className={css.author_name}>{author}</span>\n                </h2>\n                <p className={css.reviews_item_text}>{content}</p>\n                <p className={css.reviews_item_date}>\n                  <TfiAlarmClock size={'0.8em'} />\n                  <span className={css.reviews_item_date_text}>\n                    {reviewDate}\n                  </span>\n                </p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p className={css.error_message}>no reviews</p>\n      )}\n      {isLoading && <Loader />}\n      <ToastContainer />\n    </>\n  );\n}\n"],"names":["Loader","className","css","color","Reviews","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","fetch","then","response","json","res","results","catch","toast","finally","length","map","id","author","content","created_at","reviewDate","Date","toLocaleString","size"],"sourceRoot":""}
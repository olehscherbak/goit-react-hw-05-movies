{"version":3,"file":"static/js/469.d62f293b.chunk.js","mappings":"oLACA,EAA4B,0B,SCEb,SAASA,IACtB,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CAAcC,MAAM,UAGzB,C,0HCRD,EAA4B,wBAA5B,EAAgE,wBAAhE,EAAwG,4BAAxG,EAA4J,oCAA5J,EAAiN,6BAAjN,EAA8P,4B,SCK/O,SAASC,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAdAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACbI,MACE,sCACEH,EACA,oEAEDI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJV,EAAQU,EAAIX,KACb,IACAY,OAAM,kBAAMC,EAAAA,GAAAA,MAAY,gCAAlB,IACNC,SAAQ,kBAAMX,GAAa,EAAnB,GACZ,GAAE,CAACC,KAEF,gCACGJ,EAAKe,OAAS,GACb,eAAIpB,UAAWC,EAAf,SACGI,EAAKgB,KAAI,YAA+C,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACtC,OACE,gBAAgBzB,UAAWC,EAA3B,WACE,gBACEyB,IACEF,EACI,kCAAoCA,EACpC,4BAENG,IAAKJ,EACLvB,UAAWC,KAEb,iBAAKD,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAAmCsB,IAClCE,IACC,iCACE,cAAGzB,UAAWC,EAAd,iBACA,cAAGD,UAAWC,EAAd,SAAmCwB,YAflCH,EAqBZ,OAGH,cAAGtB,UAAWC,EAAd,0BAEDM,IAAa,SAACR,EAAA,EAAD,KACd,SAAC,KAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/MovieDetails/Cast/Cast.module.css?fa93","pages/MovieDetails/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Loader_container__X02md\"};","import { InfinitySpin } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport default function Loader() {\n  return (\n    <div className={css.container}>\n      <InfinitySpin color=\"blue\" />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"cast_list\":\"Cast_cast_list__X2sF5\",\"cast_item\":\"Cast_cast_item__0aG51\",\"cast_item_img\":\"Cast_cast_item_img__AcRXE\",\"cast_item_description\":\"Cast_cast_item_description__X7Qc7\",\"cast_item_text\":\"Cast_cast_item_text__YpwYm\",\"error_message\":\"Cast_error_message__23Uhq\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Loader from 'components/Loader/Loader';\nimport css from './Cast.module.css';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\n      'https://api.themoviedb.org/3/movie/' +\n        movieId +\n        '/credits?api_key=3fffdfe7cecd1a69958de862b7a37291&language=en-US'\n    )\n      .then(response => response.json())\n      .then(res => {\n        setCast(res.cast);\n      })\n      .catch(() => toast.error('Oops, something went wrong...'))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n  return (\n    <>\n      {cast.length > 0 ? (\n        <ul className={css.cast_list}>\n          {cast.map(({ order, name, profile_path, character }) => {\n            return (\n              <li key={order} className={css.cast_item}>\n                <img\n                  src={\n                    profile_path\n                      ? 'https://image.tmdb.org/t/p/w500' + profile_path\n                      : '../../no-person-image.png'\n                  }\n                  alt={name}\n                  className={css.cast_item_img}\n                />\n                <div className={css.cast_item_description}>\n                  <p className={css.cast_item_text}>{name}</p>\n                  {character && (\n                    <>\n                      <p className={css.cast_item_text}>as</p>\n                      <p className={css.cast_item_text}>{character}</p>\n                    </>\n                  )}\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p className={css.error_message}>no cast info</p>\n      )}\n      {isLoading && <Loader />}\n      <ToastContainer />\n    </>\n  );\n}\n"],"names":["Loader","className","css","color","Cast","useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","fetch","then","response","json","res","catch","toast","finally","length","map","order","name","profile_path","character","src","alt"],"sourceRoot":""}